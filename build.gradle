buildscript {
    ext.kotlin_version = '1.4.0'

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

    // dependencies {
    //     classpath 'com.android.tools.build:gradle:3.0.1'
    // }
}
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

allprojects {
    group = 'io.xpring'
    version = '0.0.1-SNAPSHOT'
    apply plugin: 'java'
    apply plugin: 'maven'

    apply plugin: 'jacoco'
    apply plugin: 'signing'
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()

        maven { url "http://repo1.maven.org/maven2/" }
    }

    signing {
        sign configurations.archives
    }
}


subprojects {

    apply plugin: 'idea'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
    }

}
repositories {
    mavenCentral()
}
dependencies {
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled = true
        xml.setDestination(new File("${buildDir}/reports/jacoco/report.xml"))
        html.enabled = false
        csv.enabled = false
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

task getDeps(type: Copy) {
    from configurations.compile
    into "$rootDir/jars/"
}

